# AUTOGENERATED! DO NOT EDIT! File to edit: 05_ucf.ipynb (unless otherwise specified).

__all__ = ['n_lbl', 'n_el', 'vid_paths', 'lbls', 'tfms', 'splits', 'splits', 'dsets', 'dls', 'learn']

# Cell
import torch
import torch.nn as nn
from fastai.vision.all import *
from fastai.data.all import *
from fastai.distributed import *
import pandas as pd
from pathlib import Path
import time
from .video_block import *
from .inflator import *
from .triplet_loss import *


# Cell
n_lbl = 4
n_el = 2

vid_paths = get_files('/mnt/data/eugeniomarinelli/UCF_Crimes/Videos', extensions='.mp4')
lbls = L(map(parent_label,vid_paths))

tfms = [[CreateVideoTensor(l=60,skip=3), RandomCropVid((224,224)),RandomHFlipVid(0.5)],
        [parent_label, Categorize()]]

splits = RandomSplitter(valid_pct=0.2, seed=42)(vid_paths)

splits = [uniformize_dataset(idxs, lbls[idxs] , n_lbl=n_lbl, n_el=n_el) for idxs in splits] #???

dsets = Datasets(vid_paths, tfms, splits=splits)




# Cell
# Trainig


dls  = dsets.dataloaders( bs=n_el*n_lbl,
                        shuffle_train=False,
                       after_batch=[IntToFloatTensor(), Normalize.from_stats(*imagenet_stats)])

head, body = inflate(create_head(1024, len(dls.vocab), lin_ftrs=[256])), inflate(create_body(resnet34, cut=-2))
learn = Learner(dls,
#                 NullModel(),
                TLModel(body,head),
#                 loss_func=NullLoss(),
                MixedLoss(alpha=1.0, margin=.2),
#                 splitter=null_splitter,
                splitter=my_splitter,
#                 opt=Optimizer([0], noop),
#                 metrics=lambda *x: 0)
                metrics=tl_accuracy)

# Cell
learn.load('UCF_model_2')
learn.fine_tune(8)
learn.save('UCF_model_2')

# Saved models: UCF_model_1 (bs=16- 4lblx4el frames= 30): acc ~ 0.20
            #   UCF_model_2 (bs = 8 4lblx2el, frames = 60 ): acc ~ 0.15