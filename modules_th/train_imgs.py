# AUTOGENERATED! DO NOT EDIT! File to edit: CALTECH101_MixedLoss.ipynb (unless otherwise specified).

__all__ = ['read_data', 'get_learner']

# Cell
from fastai import *
from fastai.vision.all import *
import umap
import seaborn as sns
from torchvision import transforms
import numpy as np
from torch import nn
import torch
from .video_block import *
from .triplet_loss import *
from .supcon_module import *
from .cus_cbs import *


# Cell
def read_data() : return pd.read_csv('/mnt/data/eugeniomarinelli/experiments_on_images/train_CALTECH101.csv')


# Cell
def get_learner(items, loss='CEL-SCL', size=128, n_lbl=4 , n_el=4, embs_size=128,n_views=2):


    df = items
    items = df.img_files.values
    tr_lbls = df.lbls[1-df.val].values
    val_lbls = df.lbls[df.val].values

    img_pip = [PILImage.create, Resize(512)]
    lbl_pip = [parent_label, Categorize()]
    pip = [*[img_pip for _ in range(n_views)], lbl_pip]
    splits = ColSplitter('val')(df)
    dsets = Datasets(items, pip, splits=splits)
    tfms = aug_transforms(size=size)

    dls = dsets.dataloaders(bs=n_el*n_lbl,
                            after_item=ToTensor(),
                            after_batch = tfms +[IntToFloatTensor(),Normalize.from_stats(*imagenet_stats)] )

    #dls.train.shuffle_fn = UniformizedShuffle(tr_lbls,n_el=n_el,n_lbl=n_lbl)
    #dls.valid.shuffle_fn = UniformizedShuffle(val_lbls,n_el=n_el,n_lbl=n_lbl)

    dls.train.shuffle = True
    dls.valid.shuffle = True


    n_views = dls.n_inp
    encoder, head = create_body(resnet50,cut = -2),create_head(4096, len(dls.vocab), lin_ftrs=[embs_size])
    model = AnomalyDetectionModel(encoder, head)

    learn = Learner(dls,
                    model,
                    loss_func=SumLoss(SupConLoss,p='cos', alpha=1, n_views=n_views),
                   metrics=[supcon_accuracy, silh_score])
    learn.add_cbs([ContrastiveCallback(n_views)])
    return learn
