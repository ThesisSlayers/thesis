# AUTOGENERATED! DO NOT EDIT! File to edit: 05_first_inflated_NN.ipynb (unless otherwise specified).

__all__ = ['read_data', 'get_vid_path', 'get_lbls', 'main']

# Cell
import torch
import torch.nn as nn
from fastai.vision.all import *
from IPython.display import display, clear_output
from fastai.data.all import *
from fastai.distributed import *
from fastscript import *
import pandas as pd
from pathlib import Path
import time
from video_block import *
from inflator import *
from triplet_loss import *

# Cell
def read_data():
    eugenio = False
    path_data = '/mnt/data/eugeniomarinelli/videodata/df.csv' if eugenio else '/mnt/data/adrianlopez/Videos/Charades/df.csv'
    df = pd.read_csv(path_data, index_col=0).dropna()
    return df

def get_vid_path(df:pd.Series): return df['paths']
def get_lbls(df:pd.Series): return df['lbl']

@call_parse
def main(gpu:Param("GPU to run on", int)=None):

    gpu = setup_distrib(gpu)

    df = rank0_first(read_data)

    tfms = [[get_vid_path, Video.create, ResizeTime(l=20), Resize(224), ToTensor()],
            [get_lbls, Categorize()]]
    splits = RandomSplitter(seed=42)(df)
    dsets = Datasets(df, tfms, splits=splits)

    n_lbl, n_el = 4, 4
    train_lbls = df['lbl'].iloc[splits[0]]
    shuffle_fn = UniformizedShuffle(train_lbls, n_lbl=n_lbl, n_el=n_el)

    dls = dsets.dataloaders(bs=n_lbl*n_el, shuffle_fn=shuffle_fn, num_workers=6)

    head, body = inflate(create_head(1024, 157, lin_ftrs=[256])), inflate(create_body(resnet34, cut=-2))
    learn = Learner(dls,
                    TLModel(body,head),
                    loss_func=MixedLoss(alpha=1.0, margin=.2),
                    splitter=my_splitter,
                    metrics=tl_accuracy
                    )

    torch.cuda.empty_cache()
    with learn.distrib_ctx(gpu):
        learn.fine_tune(8)
        learn.save('trained_models/Inflated1')